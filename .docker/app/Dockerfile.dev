FROM harbor.k8s.temple.edu/library/httpd:2.4-alpine

WORKDIR /build

COPY . .

USER root

ENV PHPIZE_DEPS="autoconf dpkg-dev file g++ gcc libc-dev make pkgconfig re2c"

RUN apk add -U --no-cache \
      bash=5.1.8-r0 \
      libxslt=1.1.34-r1 \
      tzdata=2021e-r0 \
      shared-mime-info=2.1-r0 \
      imagemagick=7.1.0.16-r0 \
      mariadb-connector-c=3.1.13-r2 \
      sudo=1.9.8_p2-r1 \
&&  apk add -U --no-cache --virtual build-dependencies \
      git=2.34.1-r0 \
      build-base=0.5-r2 \
      dpkg=1.20.9-r0 \
      libxslt-dev=1.1.34-r1 \
      mariadb-dev=10.6.4-r2 \
      mariadb-client=10.6.4-r2 \
      php7=7.4.27-r0 \
      php7-apache2=7.4.27-r0 \
      php7-dev=7.4.27-r0 \
      php7-pear=7.4.27-r0 \
      composer \
      wget=1.21.2-r2 \
      curl=7.80.0-r0 \
      ghostscript=9.55.0-r0 \
      poppler-utils=21.11.0-r0 \
      libpng-dev=1.6.37-r1 \
      libjpeg-turbo-dev=2.1.2-r0 \
      freetype-dev=2.11.0-r0 \
      imagemagick-libs=7.1.0.16-r0 \
      imagemagick-dev=7.1.0.16-r0 \
      libxpm-dev=3.5.13-r0 \
      libwebp-dev=1.2.2-r0 \
      php7-mcrypt=1.0.4-r0 \
      php7-imagick=3.6.0-r0 \
      php7-pdo=7.4.27-r0 \
      php7-iconv=7.4.27-r0 \
      php7-gd=7.4.27-r0 \
      php7-openssl=7.4.27-r0 \
      php7-mysqlnd=7.4.27-r0 \
      php7-mysqli=7.4.27-r0 \
      php7-pdo_mysql=7.4.27-r0 \
&&  curl -sSLf \
      -o /usr/local/bin/docker-php-entrypoint \
      https://raw.githubusercontent.com/docker-library/php/master/docker-php-entrypoint \
&&  chmod +x /usr/local/bin/docker-php-entrypoint \
&&  curl -sSLf \
      -o /usr/local/bin/docker-php-ext-configure \
      https://raw.githubusercontent.com/docker-library/php/master/docker-php-ext-configure \
&&  chmod +x /usr/local/bin/docker-php-ext-configure \
&&  curl -sSLf \
      -o /usr/local/bin/docker-php-ext-enable \
      https://raw.githubusercontent.com/docker-library/php/master/docker-php-ext-enable \
&&  chmod +x /usr/local/bin/docker-php-ext-enable \
&&  curl -sSLf \
      -o /usr/local/bin/docker-php-ext-install \
      https://raw.githubusercontent.com/docker-library/php/master/docker-php-ext-install \
&&  chmod +x /usr/local/bin/docker-php-ext-install \
&&  curl -sSLf \
      -o /usr/local/bin/docker-php-source \
      https://raw.githubusercontent.com/docker-library/php/master/docker-php-source \
&&  chmod +x /usr/local/bin/docker-php-source \
&&  curl -sSLf \
      -o /usr/src/php.tar.xz \
      https://www.php.net/distributions/php-7.4.25.tar.xz \
&& pecl channel-update pecl.php.net \
&&  curl -sSLf \
      -o /usr/local/bin/install-php-extensions \
      https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions \
&&  chmod +x /usr/local/bin/install-php-extensions \
&&  mkdir /conf.d \
&&  install-php-extensions gd \
&&  docker-php-ext-configure gd --with-jpeg=/usr/include/ --with-freetype=/usr/include/ \
&&  docker-php-ext-install -j"$(nproc)" iconv pdo pdo_mysql mysqli gd \
&&  yes | pecl install  mcrypt-1.0.3 || echo "pecl install encrypt: $?" \
&&  docker-php-ext-enable mcrypt || echo "docker-pop-ext-enable mcrypt: $?" \
&&  yes | pecl install imagick || echo "pecl install imagick $?" && docker-php-ext-enable imagick \
&&  wget --no-verbose "https://github.com/omeka/omeka-s/releases/download/v3.1.1/omeka-s-3.1.1.zip" -O latest_omeka_s.zip \
&&  unzip -q latest_omeka_s.zip -d /var/www/ \
&&  rm latest_omeka_s.zip \
&&  rm -rf /var/www/html/ \
&&  mv /var/www/omeka-s/ /var/www/html/ \
&&  mkdir -p /var/www/html/config/ && mkdir -p /var/www/html/files/ && mkdir -p /var/www/html/modules/ && mkdir -p /var/www/html/themes/  \
&&  mkdir -p /etc/ImageMagick-6/ \
&&  cp imagemagick-policy.xml /etc/ImageMagick-6/policy.xml \
&&  cp .htaccess /var/www/html/.htaccess \
&&  cp database.ini /var/www/html/config/ \
&&  cp local.config.php /var/www/html/config/ \
&&  cp -pr files/apache2/httpd.conf /etc/apache2 \
&&  echo "ServerName localhost" >> /etc/apache2/httpd.conf \
&&  chown -R www-data:www-data /var/www/html/ \
&&  chown -R www-data:www-data /var/log/apache2/ \
&&  chown -R www-data:www-data /run/apache2/ \
&&  chmod 600 /var/www/html/config/database.ini \
&&  chmod 600 /var/www/html/config/local.config.php \
&&  chmod 600 /var/www/html/.htaccess \
&&  wget "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -O "awscliv2.zip" && unzip awscliv2.zip && aws/install


WORKDIR /var/www/html

CMD ["sleep", "infinity"]
